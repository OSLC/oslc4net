# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI  

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-dotnet:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        version: [ {setup: '6.x', target: "net6.0"}, {setup: '7.x', target: "net7.0"}, {setup: '8.x', target: "net8.0"}]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: OSLC4Net_SDK/
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        show-progress: false
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.version.setup }}
    - name: Target ${{ matrix.version.target }} only
      shell: pwsh
      run: |
        (Get-Content JsonProviderTests/OSLC4Net.Core.JsonProviderTests.csproj) | 
          ForEach-Object { $_ -replace '>net8.0<', '>${{ matrix.version.target }}<' } |
          Set-Content JsonProviderTests/OSLC4Net.Core.JsonProviderTests.csproj
        (Get-Content OSLC4Net.ChangeManagementTest/OSLC4Net.ChangeManagementTest.csproj) | 
          ForEach-Object { $_ -replace '>net8.0<', '>${{ matrix.version.target }}<' } |
          Set-Content OSLC4Net.ChangeManagementTest/OSLC4Net.ChangeManagementTest.csproj
        (Get-Content OSLC4Net.DotNetRdfProviderTests/OSLC4Net.Core.DotNetRdfProviderTests.csproj) | 
          ForEach-Object { $_ -replace '>net8.0<', '>${{ matrix.version.target }}<' } |
          Set-Content OSLC4Net.DotNetRdfProviderTests/OSLC4Net.Core.DotNetRdfProviderTests.csproj
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal  --filter TestCategory!=RunningOslcServerRequired
